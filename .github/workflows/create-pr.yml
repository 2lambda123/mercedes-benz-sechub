# SPDX-License-Identifier: MIT
name: Release test PR

on:
  workflow_dispatch:
    inputs:
      server-version:
        description: SecHub Server Version (e.g. 0.20.0)
        required: false
      pds-version:
        description: PDS Server Version (e.g. 0.20.0)
        required: false
      client-version:
        description: Client Version (e.g. 0.23.0)
        required: false
      milestone-number:
        description: Milestone number for release(s)
        default: 15
        required: true
jobs:
  release-version:
    name: Create releases
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v2
        with:
          ref: master
      # Create temporary local tags, so we build documentation for this tag...
      # The final tag on git server side will be done by the release when the draft is saved as "real" release
      # automatically.
      - name: "Temporary tag server version: v${{ github.event.inputs.server-version }}-server - if defined"
        if: github.event.inputs.server-version != ''
        run: git tag v${{ github.event.inputs.server-version }}-server

      - name: "Temporary tag client version: v${{ github.event.inputs.client-version }}-client - if defined"
        if: github.event.inputs.client-version != ''
        run: git tag v${{ github.event.inputs.client-version }}-client

      - name: "Temporary tag PDS version: v${{ github.event.inputs.pds-version }}-pds - if defined"
        if: github.event.inputs.pds-version != ''
        run: git tag v${{ github.event.inputs.pds-version }}-pds

      # ----------------------
      # Setup + Caching
      # ----------------------
      - name: Set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: adopt
          cache: gradle
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
          stable: true
      - uses: actions/cache@v2
        id: go-cache
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Gradle clean
        run: ./gradlew clean

      # -----------------------------------------
      # Update and commit release documentation for https://mercedes-benz.github.io/sechub/
      # -----------------------------------------
      - name: Update release documentation
        id: update_release_documentation
        if: always()
        run: |
          git reset --hard
          git config user.name "SecHub release job (github-actions)"
          git config user.email github-actions-sechub@users.noreply.github.com
          sechub-doc/helperscripts/publish+git-add-releasedocs.sh
          git commit -m "docs update by SecHub release job @github-actions"

      # -----------------------------------------
      # Create pull request for release documentation
      # -----------------------------------------
      - name: Create pull request for release documentation
        id: pr_release_documentation
        uses: peter-evans/create-pull-request@v3
        with:
          branch: documentation-release
          branch-suffix: timestamp
          delete-branch: true
          title: 'Documentation release [auto-generated]'
          body: |
            Release of SecHub documentation
            - Client "v${{ github.event.inputs.client-version }}"
            - Server "v${{ github.event.inputs.server-version }}"
            - PDS "v${{ github.event.inputs.pds-version }}"

            Auto-generated by Github Actions release job.

      - name: Print PR infos
        run: |
          echo "Pull Request Number - ${{ steps.pr_release_documentation.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.pr_release_documentation.outputs.pull-request-url }}"
