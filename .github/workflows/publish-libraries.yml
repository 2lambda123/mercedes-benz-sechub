# SPDX-License-Identifier: MIT
name: Publish libraries

on:
  workflow_dispatch:
    inputs:
      libraries-version:
        description: Libraries Version (e.g. 1.0.0)
        required: true
      milestone-number:
        description: Milestone number for release(s)
        default: 20
        required: true
jobs:
  release-version:
    name: Publish + release libraries
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v2
        with:
          ref: master
      # Create temporary local tags, so we build documentation for this tag...
      # The final tag on git server side will be done by the release when the draft is saved as "real" release
      # automatically.
      - name: "Temporary tag libraries version: v${{ github.event.inputs.libraries-version }}-libraries"
        run: git tag v${{ github.event.inputs.libraries-version }}-server

      # Build
      - name: Set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: adopt
          cache: gradle
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15.3
          stable: true
      - uses: actions/cache@v2
        id: go-cache
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Gradle clean
        run: ./gradlew clean

      - name: Build
        run: ./gradlew build -x :sechub-integrationtest:test -x :sechub-cli:build

      - name: Create combined test report
        if: always()
        run: ./gradlew createCombinedTestReport

      # To identifiy parts not in git history and leading to "-dirty-$commitId" markers
      - name: Inspect GIT status
        if: always()
        run: git status > build/reports/git-status.txt

      # -----------------------------------------
      # Upload Build Artifacts (only test output)
      # -----------------------------------------
      - name: Archive combined test report
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: combined-sechub-testreport
          path: build/reports/combined-report
          retention-days: 14
      - name: Archive GIT status
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: git-status.txt
          path: build/reports/git-status.txt
          retention-days: 14
      
      # -----------------------------------------
      # Assert releaseable, so no dirty flags on releases
      # even when all artifact creation parts are done!
      # -----------------------------------------
      - name: Assert releasable
        run: ./gradlew assertReleaseable
      - name: Publish
        run: ./gradlew publish
        
      # **************************************************
      # Now let's create + publish a new LIBRARIES release
      # **************************************************
      - name: Create libraries release
        id: create_libraries_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: v${{ github.event.inputs.libraries-version }}-libraries
          commitish: master
          release_name: Libraries Version ${{ github.event.inputs.libraries-version }}
          body: |
            Changes in this Release
            - New artifacts with this version added at https://maven.pkg.github.com/daimler/sechub

            For more details please look at [Milestone ${{github.event.inputs.milestone-number}}]( https://github.com/Daimler/sechub/milestone/${{github.event.inputs.milestone-number}}?closed=1)
          draft: false
          prerelease: false
      
